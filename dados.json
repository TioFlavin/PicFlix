{
    "<ArrayableArray 2>": "class ArrayableArray extends ArrayList<Object> {  \n public Class type;  \n public ArrayableArray parent;  \n public ArrayableArray(Class type) {  \n this.type = type;  \n }  \n public ArrayableArray() {  \n this.type = Integer.class;  \n }  \n @Override  \n public boolean add(Object obj) {  \n if(obj.getClass() == this.type) {  \n super.add(obj);  \n } else {  \n if(obj instanceof ArrayableArray) {  \n ArrayableArray arr = (ArrayableArray)obj;  \n if(arr.type == this.type) {  \n super.add(arr);  \n arr.parent = this;  \n } else {  \n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n } else {  \n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n }  \n return true;  \n }  \n @Override  \n public void add(int index,Object obj){  \n if(obj.getClass() == this.type) {  \n super.add(index,obj);  \n } else {  \n if(obj instanceof ArrayableArray) {  \n ArrayableArray arr = (ArrayableArray)obj;  \n if(arr.type == this.type) {  \n super.add(index,arr);  \n arr.parent = this;  \n } else {  \n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n } else {  \n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n }  \n }  \n public String toJSON() {  \n String str = null;  \n try{  \n Gson gson = new Gson();  \n JsonElement jsonArray = gson.toJsonTree(this, new TypeToken<List<Object() {}.getType());  \n str = jsonArray.toString();  \n } catch(NoClassDefFoundError e) {  \n println(\"GSON not defined.cannot convert array to json\");  \n }  \n return str;  \n }  \n public ArrayableArray getArray(int index) {  \n ArrayableArray ret;  \n if(super.get(index) instanceof ArrayableArray) {  \n ret = (ArrayableArray)super.get(index);  \n } else {  \n throw new IllegalArgumentException(\"Excepted:\"\".concat(this.getClass().toString()).concat(\"\",but got:\"\").concat(super.get(index).getClass().toString()).concat(\"\"\"));  \n }  \n return ret;  \n }  \n}",
    "<ArrayableArray>": "class ArrayableArray extends ArrayList<Object> {  \n public Class type;  \n public ArrayableArray(Class type) {  \n this.type = type;  \n }  \n public ArrayableArray() {  \n this.type = Integer.class;  \n }  \n @Override  \n public boolean add(Object obj) {  \n if(obj.getClass() == this.type) {  \n super.add(obj);  \n } else {  \n if(obj instanceof ArrayableArray) {  \n ArrayableArray arr = (ArrayableArray)obj;  \n if(arr.type == this.type) {  \n super.add(obj);  \n } else {  \n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n } else {  \n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n }  \n return true;  \n }  \n @Override  \n public void add(int index,Object obj){  \n if(obj.getClass() == this.type) {  \n super.add(obj);  \n } else {  \n if(obj instanceof ArrayableArray) {  \n ArrayableArray arr = (ArrayableArray)obj;  \n if(arr.type == this.type) {  \n super.add(obj);  \n } else {  \n throw new IllegalArgumentException(\"Given array type does not match the parent Array type. Given type:\"\".concat(arr.type.toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n } else {  \n throw new IllegalArgumentException(\"Given value type does not match the Array value type. Given type:\"\".concat(obj.getClass().toString()).concat(\"\" Array type:\"\").concat(this.type.toString()).concat(\"\"\"));  \n }  \n }  \n }  \n public String toJSON() {  \n String str = null;  \n try{  \n Gson gson = new Gson();  \n JsonElement jsonArray = gson.toJsonTree(this, new TypeToken<List<Object() {}.getType());  \n str = jsonArray.toString();  \n } catch(NoClassDefFoundError e) {  \n println(\"GSON not defined.cannot convert array to json\");  \n }  \n return str;  \n }  \n public ArrayableArray getArray(int index) {  \n ArrayableArray ret;  \n if(super.get(index) instanceof ArrayableArray) {  \n ret = (ArrayableArray)super.get(index);  \n } else {  \n throw new IllegalArgumentException(\"Excepted:\"\".concat(this.getClass().toString()).concat(\"\",but got:\"\").concat(super.get(index).getClass().toString()).concat(\"\"\"));  \n }  \n return ret;  \n }  \n}  \n void setup() {  \n ArrayableArray arr = new ArrayableArray(Integer.class);  \n arr.add(1);  \n arr.add(new ArrayableArray(Integer.class));  \n arr.getArray(1).add(1);  \n arr.getArray(1).add(8);  \n arr.getArray(1).add(new ArrayableArray(Integer.class));  \n arr.getArray(1).getArray(2).add(7);  \n arr.getArray(1).getArray(2).add(1);  \n arr.getArray(1).add(5);  \n arr.add(6);  \n println(arr.toJSON());  \n}",
    "ActionBar - Change Home Button": "getActionBar().setHomeAsUpIndicator(R.drawable.ic_home);",
    "ActionBar - Menu": "} \n@Override \npublic boolean onCreateOptionsMenu(Menu menu){ \nmenu.add(\"Share\") \n.setIcon(R.drawable.share) \n    .setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS); \nmenu.add(\"Copy\") \n.setIcon(R.drawable.copy) \n    .setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS); \nreturn true; \n} \n@Override \npublic boolean onOptionsItemSelected(final MenuItem item){ \n    switch (item.getTitle().toString()) { \ncase \"Copy\": \n_copy(); \n \nbreak; \ncase \"Share\": \n_share(); \nreturn true; \n} \n        return super.onOptionsItemSelected(item);",
    "ActionBar Back Home": "getActionBar().setDisplayHomeAsUpEnabled(true);\n/* */} \n@Override \npublic boolean onMenuItemSelected(int featureId, MenuItem item) {\nint itemId = item.getItemId(); \nswitch (itemId) {\ncase android.R.id.home:\nfinish();\nbreak;\n}\nreturn true;",
    "ActionBar Color": "//ActionBar Color \nActionBar actionBar = getActionBar(); actionBar.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.parseColor(\"#191919\"))); \nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) { \n    Window w = MainActivity.this.getWindow(); \n    w.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); \n    w.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); \n    w.setStatusBarColor(Color.parseColor(\"#000000\")); \n} \n \n//change actionbar title color \ngetActionBar().setTitle(Html.fromHtml(\"<font color='#FF0000'>Color Tools</font>\")); \n \n \n//something can be change with header elevant \n \ntry { \nif (Build.VERSION.SDK_INT >= 21) { \ngetWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); \ngetWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); \ngetWindow().setStatusBarColor(0xFF263238); \nheaders.setElevation(10f); //your actionbar linear \n} \n} \ncatch (Exception e) { \n};",
    "ActionBar Fullscreen": "//full screen \ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN); \n \n//unfullscreen \ngetWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);",
    "ActionBar Set Icon": "getActionBar().setIcon(r.drawable.icon_name);",
    "ActionBar Show/Hide": "//show actionbar  \n getActionBar().show(); \n \n//hide ActionBar  \n getActionBar().hide(); \n \n//APPCOMPAT (show) \ngetSupportActionBar().show(); \n \n//APPCOMPAT (hide) \ngetSupportActionBar().hide();",
    "ActionBar SubTitle": "getActionBar().setSubtitle(\"Subtitle\");",
    "ActionBar Title": "getActionBar().setTitle(\"Title\");",
    "ActionBar Title RGBG": "String Int_title = String.format(Locale.US, \"#%06X\", (0xFFFFFF & Color.argb(120,50,90,10))); \n \ngetActionBar().setTitle(Html.fromHtml(\"<font color=\"\" + Int_title + \"\">SketchCodeBot</font>\"));",
    "Activity - Remove Animation": "overridePendingTransitions(0, 0);",
    "Activity - Transition": "overridePendingTransition(android.R.anim.slide_in_left, android.R.anim.slide_out_right);\n\n\noverridePendingTransition(android.R.anim.overshoot_interpolator, android.R.anim.overshoot_interpolator);\n\n\noverridePendingTransition(android.R.anim.linear_interpolator, android.R.anim.linear_interpolator);\n\n/Code Created by Gabriel Gymkhana and reconfigured by T\u00f8astcode.",
    "AdapterViewFlipper": "final AdapterViewFlipper adapterViewFlipper = new AdapterViewFlipper(MainActivity.this); linear1.addView(adapterViewFlipper);\n\nfinal int IMAGES[] = {R.drawable.ic_looks_one_black,    R.drawable.ic_looks_two_black,\nR.drawable.ic_looks_three_black, R.drawable.ic_looks_four_black,\nR.drawable.ic_looks_five_black};\n\n// Names of Pages\nfinal String TEXTS[] = {\"AdapterViewFlipper 1\", \"AdapterViewFlipper 2\", \"AdapterViewFlipper 3\", \"AdapterViewFlipper 4\", \"AdapterViewFlipper 5\"};\n\n\nFlipperAdapter flipperAdapter = new FlipperAdapter(this, TEXTS, IMAGES);\n adapterViewFlipper.setAdapter(flipperAdapter);  adapterViewFlipper.setFlipInterval(3000); adapterViewFlipper.setAutoStart(true); }\n\n\nfinal class FlipperAdapter extends BaseAdapter {\nContext ctx;\nint[] IMAGES;\nString[] TEXTS;\nLayoutInflater inflater;\n\npublic FlipperAdapter(Context context, String[] TEXTS, int[] IMAGES){\nthis.ctx = context;\nthis.IMAGES = IMAGES;\nthis.TEXTS = TEXTS;\nthis.inflater = LayoutInflater.from(context); }\n\n@Override public int getCount() {\nreturn TEXTS.length; }\n\n@Override\npublic Object getItem(int position) {\nreturn null; }\n\n@Override public long getItemId(int position) {\nreturn 0; }\n\n@Override\npublic View getView(int position, View view, ViewGroup parent) {\n\nview = inflater.inflate(R.layout.adapterviewflipper, null);\n\nTextView textview1 = (TextView) view.findViewById(R.id.textview1);\nImageView imageview1 = (ImageView) view.findViewById(R.id.imageview1);\n\ntextview1.setText(TEXTS[position]);\nimageview1.setImageResource(IMAGES[position]);\n\nreturn view; }\n\n\n//NOTE\n\n//inside \"main.xml\"\n//linear1\n\n//inside \"adapterviewflipper.xml\"\n//imagview1\n//textview1",
    "Admob Banner": "How To Add Banner Ads From AdMob With Sketchware And AIDE ? \n \n* First: \n1 - add linear1 to your project to show ads in linear1 \n2 - add this code to MoreBlock \n \n#### START #### \nMobileAds.initialize(this, \"ca-app-pub-7530745542139842~3104915699\"); \nfinal AdView adView = new AdView(this); \nadView.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.WRAP_CONTENT, android.widget.LinearLayout.LayoutParams.WRAP_CONTENT)); \nlinear1.addView(adView); \nadView.setAdSize(AdSize.BANNER); \nadView.setAdUnitId(\"ca-app-pub-7530745542139842/7894686875\"); \n \nAdRequest adRequest = new AdRequest.Builder().build(); \nadView.loadAd(adRequest); \nadView.setAdListener(new AdListener() { \n@Override \npublic void onAdLoaded() { \n//showMessage(\"Loaded\"); \n} \n@Override \npublic void onAdFailedToLoad(int errorCode) { \nshowMessage(\"No Internet Connection\"); \n} \n@Override \npublic void onAdOpened() { \nshowMessage(\"Opened\"); \n} \n@Override \npublic void onAdLeftApplication() { \n//showMessage(\"Leave App\"); \n} \n@Override \npublic void onAdClosed() { \n//showMessage(\"Clossed\"); \n} \n}); \n###### End ##### \n \n \n* More: \nOpen Aide --> Manifest Project Add permission INTERNET and ACCESS_NETWORK_STATE \n \n* Add Again: \n* On Manifest: \n########## \n<meta-data \n android:name=\"com.google.android.gms.version\" \n android:value=\"@integer/google_play_services_version\" /> \n<activity \n android:name=\"com.google.android.gms.ads.AdActivity\" \n android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\" \n android:theme=\"@android:style/Theme.Translucent\" /> \n########### \n \nOpen MainActivity (place admob on sketchware) \nadd import code like this: \n############ \nimport com.google.android.gms.ads.MobileAds; \nimport com.google.android.gms.ads.AdRequest; \nimport com.google.android.gms.ads.AdView; \nimport com.google.android.gms.ads.AdListener; \nimport com.google.android.gms.ads.AdSize; \n########### \n \nAnd Last Open Build.gradle add: \ncom.google.android.gms:play-services-ads:+ \n \nDone and see!",
    "Admob Full View": "Ads AdMob Full View. \n \nOn Sketchware onCreate Add This: \n########### \nMobileAds.initialize(this, \"ca-app-pub-7530745542139842~1196614254\");  \nmInterstitialAd = new InterstitialAd(this);  \nmInterstitialAd.setAdUnitId(\"ca-app-pub-7530745542139842/4425412820\"); \nmInterstitialAd.loadAd(new AdRequest.Builder().build()); \nmInterstitialAd.setAdListener(new AdListener() {  \n@Override  \npublic void onAdLoaded() {  \n// Code to be executed when an ad finishes loading.  \n}  \n@Override  \npublic void onAdFailedToLoad(int errorCode) {  \n// Code to be executed when an ad request fails.  \n}  \n@Override \npublic void onAdOpened() {  \n// Code to be executed when the ad is displayed.  \n}  \n@Override \npublic void onAdLeftApplication() {  \n// Code to be executed when the user has left the app. \n}  \n@Override  \npublic void onAdClosed() { \n// Load the next interstitial. \nmInterstitialAd.loadAd(new AdRequest.Builder().build());  \n// Code to be executed when when the interstitial ad is closed. \n}  \n}); \n############# \n \nTo View This Add OnClick \n############## \nif (mInterstitialAd.isLoaded()) { \nmInterstitialAd.show(); \n} \n############## \n \n \nDone Export to Aide Add import and private: \n############## \nimport com.google.android.gms.ads.InterstitialAd; \nimport com.google.android.gms.ads.AdRequest; \nimport com.google.android.gms.ads.MobileAds; \nimport com.google.android.gms.ads.AdListener; \n########### \n \nAdd Private: \n########### \nprivate InterstitialAd mInterstitialAd; \n######### \n \n \nOn Manifest Add: \n######### \n <activity android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode\" android:name=\"com.google.android.gms.ads.AdActivity\" android:theme=\"@android:style/Theme.Translucent\" /> \n  <activity android:name=\"com.google.android.gms.ads.purchase.InAppPurchaseActivity\" android:theme=\"@style/Theme.IAPTheme\" /> \n  <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" /> \n  <activity android:exported=\"false\" android:name=\"com.google.android.gms.common.api.GoogleApiActivity\" android:theme=\"@android:style/Theme.Translucent.NoTitleBar\" /> \n############## \n \n \npermission is some.",
    "AdMob Reward Video": "} \npublic com.google.android.gms.ads.reward.RewardedVideoAd mReward; \nprivate void nothing() { \n \n//?\ueb63\u93ad\u13ad\u73ad ???\ueb63 \ue3ad\ueb63?\u23ad\ud3ad\ueb63  ??\u13ad\u33ad\ua3ad ? \uc3ad\ueb63 \uf3ad\ua3ad\u83ad, ?\ueb63?\ueb63 ??\u13ad\u33ad\ua3ad \ue3ad\ueb63?\u23ad\ud3ad\ueb63  OnPostCreate \n \ncom.google.android.gms.ads.MobileAds.initialize(this, \"AD_UNIT_ID\"); \nmReward = com.google.android.gms.ads.MobileAds.getRewardedVideoAdInstance(this); \nAdRequest adRequest = new AdRequest.Builder().build(); \nmReward.loadAd(\"AD_UNIT_ID\", adRequest); \nmReward.setRewardedVideoAdListener(new com.google.android.gms.ads.reward.RewardedVideoAdListener() { \n@Override \npublic void onRewarded(com.google.android.gms.ads.reward.RewardItem reward) { \n \n//if success watch video  \n \n} \n@Override \npublic void onRewardedVideoAdLeftApplication() { \n} \n@Override \npublic void onRewardedVideoAdClosed() { \nAdRequest adRequest = new AdRequest.Builder().build(); \nmReward.loadAd(\"AD_UNIT_ID\", adRequest); \n} \n@Override \npublic void onRewardedVideoAdFailedToLoad(int errorCode) { \nAdRequest adRequest = new AdRequest.Builder().build(); \nmReward.loadAd(\"AD_UNIT_ID\", adRequest); \n} \n@Override \npublic void onRewardedVideoAdLoaded() { \n} \n@Override \npublic void onRewardedVideoAdOpened() { \n} \n@Override \npublic void onRewardedVideoStarted() { \n} \n@Override \npublic void onRewardedVideoCompleted() { \n} \n});",
    "Admob Video Forward": "} \npublic com.google.android.gms.ads.reward.RewardedVideoAd mReward; \nprivate void nothing() { \n \n//?\ueb63\u93ad\u13ad\u73ad ???\ueb63 \ue3ad\ueb63?\u23ad\ud3ad\ueb63  ??\u13ad\u33ad\ua3ad ? \uc3ad\ueb63 \uf3ad\ua3ad\u83ad, ?\ueb63?\ueb63 ??\u13ad\u33ad\ua3ad \ue3ad\ueb63?\u23ad\ud3ad\ueb63  OnPostCreate \n \ncom.google.android.gms.ads.MobileAds.initialize(this, \"AD_UNIT_ID\"); \nmReward = com.google.android.gms.ads.MobileAds.getRewardedVideoAdInstance(this); \nAdRequest adRequest = new AdRequest.Builder().build(); \nmReward.loadAd(\"AD_UNIT_ID\", adRequest); \nmReward.setRewardedVideoAdListener(new com.google.android.gms.ads.reward.RewardedVideoAdListener() { \n@Override \npublic void onRewarded(com.google.android.gms.ads.reward.RewardItem reward) { \n \n//if success watch video  \n \n} \n@Override \npublic void onRewardedVideoAdLeftApplication() { \n} \n@Override \npublic void onRewardedVideoAdClosed() { \nAdRequest adRequest = new AdRequest.Builder().build(); \nmReward.loadAd(\"AD_UNIT_ID\", adRequest); \n} \n@Override \npublic void onRewardedVideoAdFailedToLoad(int errorCode) { \nAdRequest adRequest = new AdRequest.Builder().build(); \nmReward.loadAd(\"AD_UNIT_ID\", adRequest); \n} \n@Override \npublic void onRewardedVideoAdLoaded() { \n} \n@Override \npublic void onRewardedVideoAdOpened() { \n} \n@Override \npublic void onRewardedVideoStarted() { \n} \n@Override \npublic void onRewardedVideoCompleted() { \n} \n});",
    "AdView": "AdView adView; \nadView = (AdView) findViewById(R.id.adView); \nadView = new AdView(this); \n  adView.setAdUnitId(\"ca-app-pub-****/**\"); \n  adView.setAdSize(AdSize.BANNER); //\u044e\u13ad\u93ad\ue3ad\u63ad \u23ad\u13ad\uf3ad\uf3ad\u63ad?  \n  lin_hom.addView(adView); \n  AdRequest adRequest = new AdRequest.Builder().build(); \n  adView.loadAd(adRequest);",
    "AlertDialog": "AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this); \n    builder.setTitle(\"Title\") \n     .setMessage(\"Message\") \n     .setCancelable(false) \n     .setNegativeButton(\"\u03ce\", new DialogInterface.OnClickListener() { \n      public void onClick(DialogInterface dialog, int id) { \n       //clicked \n      } \n     }); \n    AlertDialog alert = builder.create(); \n    alert.show();"
}